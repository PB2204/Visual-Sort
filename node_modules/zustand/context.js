'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var react = require('react');

function createContext() {
  var ZustandContext = react.createContext(undefined);

  var Provider = function Provider(_ref) {
    var initialStore = _ref.initialStore,
        children = _ref.children;
    var storeRef = react.useRef();

    if (!storeRef.current) {
      storeRef.current = initialStore;
    }

    return react.createElement(ZustandContext.Provider, {
      value: storeRef.current
    }, children);
  };

  var useStore = function useStore(selector, equalityFn) {
    if (equalityFn === void 0) {
      equalityFn = Object.is;
    }

    var useProviderStore = react.useContext(ZustandContext);

    if (!useProviderStore) {
      throw new Error('Seems like you have not used zustand provider as an ancestor.');
    }

    return useProviderStore(selector, equalityFn);
  };

  var useStoreApi = function useStoreApi() {
    var useProviderStore = react.useContext(ZustandContext);

    if (!useProviderStore) {
      throw new Error('Seems like you have not used zustand provider as an ancestor.');
    }

    return {
      getState: useProviderStore.getState,
      setState: useProviderStore.setState,
      subscribe: useProviderStore.subscribe,
      destroy: useProviderStore.destroy
    };
  };

  return {
    Provider: Provider,
    useStore: useStore,
    useStoreApi: useStoreApi
  };
}

exports.default = createContext;
