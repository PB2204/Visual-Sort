{
  "version": 3,
  "sources": ["../zustand/esm/index.js", "dep:zustand"],
  "sourcesContent": ["import { useReducer, useRef, useEffect, useLayoutEffect } from 'react';\n\nfunction create$1(createState) {\n  let state;\n  const listeners = new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (nextState !== state) {\n      const previousState = state;\n      state = replace ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const subscribeWithSelector = (listener, selector = getState, equalityFn = Object.is) => {\n    let currentSlice = selector(state);\n    function listenerToAdd() {\n      const nextSlice = selector(state);\n      if (!equalityFn(currentSlice, nextSlice)) {\n        const previousSlice = currentSlice;\n        listener(currentSlice = nextSlice, previousSlice);\n      }\n    }\n    listeners.add(listenerToAdd);\n    return () => listeners.delete(listenerToAdd);\n  };\n  const subscribe = (listener, selector, equalityFn) => {\n    if (selector || equalityFn) {\n      return subscribeWithSelector(listener, selector, equalityFn);\n    }\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => listeners.clear();\n  const api = {setState, getState, subscribe, destroy};\n  state = createState(setState, getState, api);\n  return api;\n}\n\nconst isSSR = typeof window === \"undefined\" || !window.navigator || /ServerSideRendering|^Deno\\//.test(window.navigator.userAgent);\nconst useIsomorphicLayoutEffect = isSSR ? useEffect : useLayoutEffect;\nfunction create(createState) {\n  const api = typeof createState === \"function\" ? create$1(createState) : createState;\n  const useStore = (selector = api.getState, equalityFn = Object.is) => {\n    const [, forceUpdate] = useReducer((c) => c + 1, 0);\n    const state = api.getState();\n    const stateRef = useRef(state);\n    const selectorRef = useRef(selector);\n    const equalityFnRef = useRef(equalityFn);\n    const erroredRef = useRef(false);\n    const currentSliceRef = useRef();\n    if (currentSliceRef.current === void 0) {\n      currentSliceRef.current = selector(state);\n    }\n    let newStateSlice;\n    let hasNewStateSlice = false;\n    if (stateRef.current !== state || selectorRef.current !== selector || equalityFnRef.current !== equalityFn || erroredRef.current) {\n      newStateSlice = selector(state);\n      hasNewStateSlice = !equalityFn(currentSliceRef.current, newStateSlice);\n    }\n    useIsomorphicLayoutEffect(() => {\n      if (hasNewStateSlice) {\n        currentSliceRef.current = newStateSlice;\n      }\n      stateRef.current = state;\n      selectorRef.current = selector;\n      equalityFnRef.current = equalityFn;\n      erroredRef.current = false;\n    });\n    const stateBeforeSubscriptionRef = useRef(state);\n    useIsomorphicLayoutEffect(() => {\n      const listener = () => {\n        try {\n          const nextState = api.getState();\n          const nextStateSlice = selectorRef.current(nextState);\n          if (!equalityFnRef.current(currentSliceRef.current, nextStateSlice)) {\n            stateRef.current = nextState;\n            currentSliceRef.current = nextStateSlice;\n            forceUpdate();\n          }\n        } catch (error) {\n          erroredRef.current = true;\n          forceUpdate();\n        }\n      };\n      const unsubscribe = api.subscribe(listener);\n      if (api.getState() !== stateBeforeSubscriptionRef.current) {\n        listener();\n      }\n      return unsubscribe;\n    }, []);\n    return hasNewStateSlice ? newStateSlice : currentSliceRef.current;\n  };\n  Object.assign(useStore, api);\n  useStore[Symbol.iterator] = function* () {\n    console.warn(\"[useStore, api] = create() is deprecated and will be removed in v4\");\n    yield useStore;\n    yield api;\n  };\n  return useStore;\n}\n\nexport default create;\n", "import d from \"./node_modules/zustand/esm/index.js\";export default d;"],
  "mappings": "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",
  "names": []
}
