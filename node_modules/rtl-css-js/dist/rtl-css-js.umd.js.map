{"version":3,"file":"rtl-css-js.umd.js","sources":["../src/internal/utils.js","../src/internal/property-value-converters.js","../src/internal/convert.js"],"sourcesContent":["/**\n * Takes an array of [keyValue1, keyValue2] pairs and creates an object of {keyValue1: keyValue2, keyValue2: keyValue1}\n * @param {Array} array the array of pairs\n * @return {Object} the {key, value} pair object\n */\nfunction arrayToObject(array) {\n  return array.reduce((obj, [prop1, prop2]) => {\n    obj[prop1] = prop2\n    obj[prop2] = prop1\n    return obj\n  }, {})\n}\n\nfunction isBoolean(val) {\n  return typeof val === 'boolean'\n}\n\nfunction isFunction(val) {\n  return typeof val === 'function'\n}\n\nfunction isNumber(val) {\n  return typeof val === 'number'\n}\n\nfunction isNullOrUndefined(val) {\n  return val === null || typeof val === 'undefined'\n}\n\nfunction isObject(val) {\n  return val && typeof val === 'object'\n}\n\nfunction isString(val) {\n  return typeof val === 'string'\n}\n\nfunction includes(inclusive, inclusee) {\n  return inclusive.indexOf(inclusee) !== -1\n}\n\n/**\n * Flip the sign of a CSS value, possibly with a unit.\n *\n * We can't just negate the value with unary minus due to the units.\n *\n * @private\n * @param {String} value - the original value (for example 77%)\n * @return {String} the result (for example -77%)\n */\nfunction flipSign(value) {\n  if (parseFloat(value) === 0) {\n    // Don't mangle zeroes\n    return value\n  }\n\n  if (value[0] === '-') {\n    return value.slice(1)\n  }\n\n  return `-${value}`\n}\n\nfunction flipTransformSign(match, prefix, offset, suffix) {\n  return prefix + flipSign(offset) + suffix\n}\n\n/**\n * Takes a percentage for background position and inverts it.\n * This was copied and modified from CSSJanus:\n * https://github.com/cssjanus/cssjanus/blob/4245f834365f6cfb0239191a151432fb85abab23/src/cssjanus.js#L152-L175\n * @param {String} value - the original value (for example 77%)\n * @return {String} the result (for example 23%)\n */\nfunction calculateNewBackgroundPosition(value) {\n  const idx = value.indexOf('.')\n  if (idx === -1) {\n    value = `${100 - parseFloat(value)}%`\n  } else {\n    // Two off, one for the \"%\" at the end, one for the dot itself\n    const len = value.length - idx - 2\n    value = 100 - parseFloat(value)\n    value = `${value.toFixed(len)}%`\n  }\n  return value\n}\n\n/**\n * This takes a list of CSS values and converts it to an array\n * @param {String} value - something like `1px`, `1px 2em`, or `3pt rgb(150, 230, 550) 40px calc(100% - 5px)`\n * @return {Array} the split values (for example: `['3pt', 'rgb(150, 230, 550)', '40px', 'calc(100% - 5px)']`)\n */\nfunction getValuesAsList(value) {\n  return (\n    value\n      .replace(/ +/g, ' ') // remove all extraneous spaces\n      .split(' ')\n      .map(i => i.trim()) // get rid of extra space before/after each item\n      .filter(Boolean) // get rid of empty strings\n      // join items which are within parenthese\n      // luckily `calc (100% - 5px)` is invalid syntax and it must be `calc(100% - 5px)`, otherwise this would be even more complex\n      .reduce(\n        ({list, state}, item) => {\n          const openParansCount = (item.match(/\\(/g) || []).length\n          const closedParansCount = (item.match(/\\)/g) || []).length\n          if (state.parensDepth > 0) {\n            list[list.length - 1] = `${list[list.length - 1]} ${item}`\n          } else {\n            list.push(item)\n          }\n          state.parensDepth += openParansCount - closedParansCount\n          return {list, state}\n        },\n        {list: [], state: {parensDepth: 0}},\n      ).list\n  )\n}\n\n/**\n * This is intended for properties that are `top right bottom left` and will switch them to `top left bottom right`\n * @param {String} value - `1px 2px 3px 4px` for example, but also handles cases where there are too few/too many and\n * simply returns the value in those cases (which is the correct behavior)\n * @return {String} the result - `1px 4px 3px 2px` for example.\n */\nfunction handleQuartetValues(value) {\n  const splitValues = getValuesAsList(value)\n  if (splitValues.length <= 3 || splitValues.length > 4) {\n    return value\n  }\n  const [top, right, bottom, left] = splitValues\n  return [top, left, bottom, right].join(' ')\n}\n\nexport {\n  arrayToObject,\n  calculateNewBackgroundPosition,\n  flipTransformSign as calculateNewTranslate,\n  flipTransformSign,\n  flipSign,\n  handleQuartetValues,\n  includes,\n  isBoolean,\n  isFunction,\n  isNullOrUndefined,\n  isNumber,\n  isObject,\n  isString,\n  getValuesAsList,\n}\n","import {\n  includes,\n  isNumber,\n  calculateNewBackgroundPosition,\n  flipTransformSign,\n  handleQuartetValues,\n  getValuesAsList,\n} from './utils'\n\n// some values require a little fudging, that fudging goes here.\nconst propertyValueConverters = {\n  padding({value}) {\n    if (isNumber(value)) {\n      return value\n    }\n    return handleQuartetValues(value)\n  },\n  textShadow({value}) {\n    // intentionally leaving off the `g` flag here because we only want to change the first number (which is the offset-x)\n    return value.replace(/(-*)([.|\\d]+)/, (match, negative, number) => {\n      if (number === '0') {\n        return match\n      }\n      const doubleNegative = negative === '' ? '-' : ''\n      return `${doubleNegative}${number}`\n    })\n  },\n  borderColor({value}) {\n    return handleQuartetValues(value)\n  },\n  borderRadius({value}) {\n    if (isNumber(value)) {\n      return value\n    }\n    if (includes(value, '/')) {\n      const [radius1, radius2] = value.split('/')\n      const convertedRadius1 = propertyValueConverters.borderRadius({\n        value: radius1.trim(),\n      })\n      const convertedRadius2 = propertyValueConverters.borderRadius({\n        value: radius2.trim(),\n      })\n      return `${convertedRadius1} / ${convertedRadius2}`\n    }\n    const splitValues = getValuesAsList(value)\n    switch (splitValues.length) {\n      case 2: {\n        return splitValues.reverse().join(' ')\n      }\n      case 4: {\n        const [topLeft, topRight, bottomRight, bottomLeft] = splitValues\n        return [topRight, topLeft, bottomLeft, bottomRight].join(' ')\n      }\n      default: {\n        return value\n      }\n    }\n  },\n  background({\n    value,\n    valuesToConvert,\n    isRtl,\n    bgImgDirectionRegex,\n    bgPosDirectionRegex,\n  }) {\n    // Yeah, this is in need of a refactor 🙃...\n    // but this property is a tough cookie 🍪\n    // get the backgroundPosition out of the string by removing everything that couldn't be the backgroundPosition value\n    const backgroundPositionValue = value\n      .replace(\n        /(url\\(.*?\\))|(rgba?\\(.*?\\))|(hsl\\(.*?\\))|(#[a-fA-F0-9]+)|((^| )(\\D)+( |$))/g,\n        '',\n      )\n      .trim()\n    // replace that backgroundPosition value with the converted version\n    value = value.replace(\n      backgroundPositionValue,\n      propertyValueConverters.backgroundPosition({\n        value: backgroundPositionValue,\n        valuesToConvert,\n        isRtl,\n        bgPosDirectionRegex,\n      }),\n    )\n    // do the backgroundImage value replacing on the whole value (because why not?)\n    return propertyValueConverters.backgroundImage({\n      value,\n      valuesToConvert,\n      bgImgDirectionRegex,\n    })\n  },\n  backgroundImage({value, valuesToConvert, bgImgDirectionRegex}) {\n    if (!includes(value, 'url(') && !includes(value, 'linear-gradient(')) {\n      return value\n    }\n    return value.replace(bgImgDirectionRegex, (match, g1, group2) => {\n      return match.replace(group2, valuesToConvert[group2])\n    })\n  },\n  backgroundPosition({value, valuesToConvert, isRtl, bgPosDirectionRegex}) {\n    return (\n      value\n        // intentionally only grabbing the first instance of this because that represents `left`\n        .replace(isRtl ? /^((-|\\d|\\.)+%)/ : null, (match, group) =>\n          calculateNewBackgroundPosition(group),\n        )\n        .replace(bgPosDirectionRegex, match => valuesToConvert[match])\n    )\n  },\n  backgroundPositionX({value, valuesToConvert, isRtl, bgPosDirectionRegex}) {\n    if (isNumber(value)) {\n      return value\n    }\n    return propertyValueConverters.backgroundPosition({\n      value,\n      valuesToConvert,\n      isRtl,\n      bgPosDirectionRegex,\n    })\n  },\n  transition({value, propertiesToConvert}) {\n    return value\n      .split(/,\\s*/g)\n      .map(transition => {\n        const values = transition.split(' ')\n\n        // Property is always defined first\n        values[0] = propertiesToConvert[values[0]] || values[0]\n\n        return values.join(' ')\n      })\n      .join(', ')\n  },\n  transitionProperty({value, propertiesToConvert}) {\n    return value\n      .split(/,\\s*/g)\n      .map(prop => propertiesToConvert[prop] || prop)\n      .join(', ')\n  },\n  transform({value}) {\n    // This was copied and modified from CSSJanus:\n    // https://github.com/cssjanus/cssjanus/blob/4a40f001b1ba35567112d8b8e1d9d95eda4234c3/src/cssjanus.js#L152-L153\n    const nonAsciiPattern = '[^\\\\u0020-\\\\u007e]'\n    const unicodePattern = '(?:(?:\\\\[0-9a-f]{1,6})(?:\\\\r\\\\n|\\\\s)?)'\n    const numPattern = '(?:[0-9]*\\\\.[0-9]+|[0-9]+)'\n    const unitPattern = '(?:em|ex|px|cm|mm|in|pt|pc|deg|rad|grad|ms|s|hz|khz|%)'\n    const escapePattern = `(?:${unicodePattern}|\\\\\\\\[^\\\\r\\\\n\\\\f0-9a-f])`\n    const nmstartPattern = `(?:[_a-z]|${nonAsciiPattern}|${escapePattern})`\n    const nmcharPattern = `(?:[_a-z0-9-]|${nonAsciiPattern}|${escapePattern})`\n    const identPattern = `-?${nmstartPattern}${nmcharPattern}*`\n    const quantPattern = `${numPattern}(?:\\\\s*${unitPattern}|${identPattern})?`\n    const signedQuantPattern = `((?:-?${quantPattern})|(?:inherit|auto))`\n    const translateXRegExp = new RegExp(\n      `(translateX\\\\s*\\\\(\\\\s*)${signedQuantPattern}(\\\\s*\\\\))`,\n      'gi',\n    )\n    const translateRegExp = new RegExp(\n      `(translate\\\\s*\\\\(\\\\s*)${signedQuantPattern}((?:\\\\s*,\\\\s*${signedQuantPattern}){0,1}\\\\s*\\\\))`,\n      'gi',\n    )\n    const translate3dRegExp = new RegExp(\n      `(translate3d\\\\s*\\\\(\\\\s*)${signedQuantPattern}((?:\\\\s*,\\\\s*${signedQuantPattern}){0,2}\\\\s*\\\\))`,\n      'gi',\n    )\n    const rotateRegExp = new RegExp(\n      `(rotate[ZY]?\\\\s*\\\\(\\\\s*)${signedQuantPattern}(\\\\s*\\\\))`,\n      'gi',\n    )\n    return value\n      .replace(translateXRegExp, flipTransformSign)\n      .replace(translateRegExp, flipTransformSign)\n      .replace(translate3dRegExp, flipTransformSign)\n      .replace(rotateRegExp, flipTransformSign)\n  },\n}\n\npropertyValueConverters.objectPosition = propertyValueConverters.backgroundPosition;\npropertyValueConverters.margin = propertyValueConverters.padding\npropertyValueConverters.borderWidth = propertyValueConverters.padding\npropertyValueConverters.boxShadow = propertyValueConverters.textShadow\npropertyValueConverters.webkitBoxShadow = propertyValueConverters.boxShadow\npropertyValueConverters.mozBoxShadow = propertyValueConverters.boxShadow\npropertyValueConverters.WebkitBoxShadow = propertyValueConverters.boxShadow\npropertyValueConverters.MozBoxShadow = propertyValueConverters.boxShadow\npropertyValueConverters.borderStyle = propertyValueConverters.borderColor\npropertyValueConverters.webkitTransform = propertyValueConverters.transform\npropertyValueConverters.mozTransform = propertyValueConverters.transform\npropertyValueConverters.WebkitTransform = propertyValueConverters.transform\npropertyValueConverters.MozTransform = propertyValueConverters.transform\npropertyValueConverters.transformOrigin =\n  propertyValueConverters.backgroundPosition\npropertyValueConverters.webkitTransformOrigin =\n  propertyValueConverters.transformOrigin\npropertyValueConverters.mozTransformOrigin =\n  propertyValueConverters.transformOrigin\npropertyValueConverters.WebkitTransformOrigin =\n  propertyValueConverters.transformOrigin\npropertyValueConverters.MozTransformOrigin =\n  propertyValueConverters.transformOrigin\npropertyValueConverters.webkitTransition = propertyValueConverters.transition\npropertyValueConverters.mozTransition = propertyValueConverters.transition\npropertyValueConverters.WebkitTransition = propertyValueConverters.transition\npropertyValueConverters.MozTransition = propertyValueConverters.transition\npropertyValueConverters.webkitTransitionProperty =\n  propertyValueConverters.transitionProperty\npropertyValueConverters.mozTransitionProperty =\n  propertyValueConverters.transitionProperty\npropertyValueConverters.WebkitTransitionProperty =\n  propertyValueConverters.transitionProperty\npropertyValueConverters.MozTransitionProperty =\n  propertyValueConverters.transitionProperty\n\n// kebab-case versions\n\npropertyValueConverters['text-shadow'] = propertyValueConverters.textShadow\npropertyValueConverters['border-color'] = propertyValueConverters.borderColor\npropertyValueConverters['border-radius'] = propertyValueConverters.borderRadius\npropertyValueConverters['background-image'] =\n  propertyValueConverters.backgroundImage\npropertyValueConverters['background-position'] =\n  propertyValueConverters.backgroundPosition\npropertyValueConverters['background-position-x'] =\n  propertyValueConverters.backgroundPositionX\npropertyValueConverters['object-position'] =\n  propertyValueConverters.objectPosition\npropertyValueConverters['border-width'] = propertyValueConverters.padding\npropertyValueConverters['box-shadow'] = propertyValueConverters.textShadow\npropertyValueConverters['-webkit-box-shadow'] =\n  propertyValueConverters.textShadow\npropertyValueConverters['-moz-box-shadow'] = propertyValueConverters.textShadow\npropertyValueConverters['border-style'] = propertyValueConverters.borderColor\npropertyValueConverters['-webkit-transform'] = propertyValueConverters.transform\npropertyValueConverters['-moz-transform'] = propertyValueConverters.transform\npropertyValueConverters['transform-origin'] =\n  propertyValueConverters.transformOrigin\npropertyValueConverters['-webkit-transform-origin'] =\n  propertyValueConverters.transformOrigin\npropertyValueConverters['-moz-transform-origin'] =\n  propertyValueConverters.transformOrigin\npropertyValueConverters['-webkit-transition'] =\n  propertyValueConverters.transition\npropertyValueConverters['-moz-transition'] = propertyValueConverters.transition\npropertyValueConverters['transition-property'] =\n  propertyValueConverters.transitionProperty\npropertyValueConverters['-webkit-transition-property'] =\n  propertyValueConverters.transitionProperty\npropertyValueConverters['-moz-transition-property'] =\n  propertyValueConverters.transitionProperty\n\nexport default propertyValueConverters\n","import {\n  includes,\n  arrayToObject,\n  isBoolean,\n  isFunction,\n  isNumber,\n  isObject,\n  isString,\n  isNullOrUndefined,\n} from './utils'\nimport propertyValueConverters from './property-value-converters'\n\n// this will be an object of properties that map to their corresponding rtl property (their doppelganger)\nexport const propertiesToConvert = arrayToObject([\n  ['paddingLeft', 'paddingRight'],\n  ['marginLeft', 'marginRight'],\n  ['left', 'right'],\n  ['borderLeft', 'borderRight'],\n  ['borderLeftColor', 'borderRightColor'],\n  ['borderLeftStyle', 'borderRightStyle'],\n  ['borderLeftWidth', 'borderRightWidth'],\n  ['borderTopLeftRadius', 'borderTopRightRadius'],\n  ['borderBottomLeftRadius', 'borderBottomRightRadius'],\n  // kebab-case versions\n  ['padding-left', 'padding-right'],\n  ['margin-left', 'margin-right'],\n  ['border-left', 'border-right'],\n  ['border-left-color', 'border-right-color'],\n  ['border-left-style', 'border-right-style'],\n  ['border-left-width', 'border-right-width'],\n  ['border-top-left-radius', 'border-top-right-radius'],\n  ['border-bottom-left-radius', 'border-bottom-right-radius'],\n])\n\nexport const propsToIgnore = ['content']\n\n// this is the same as the propertiesToConvert except for values\nexport const valuesToConvert = arrayToObject([\n  ['ltr', 'rtl'],\n  ['left', 'right'],\n  ['w-resize', 'e-resize'],\n  ['sw-resize', 'se-resize'],\n  ['nw-resize', 'ne-resize'],\n])\n\n// Sorry for the regex 😞, but basically thisis used to replace _every_ instance of\n// `ltr`, `rtl`, `right`, and `left` in `backgroundimage` with the corresponding opposite.\n// A situation we're accepting here:\n// url('/left/right/rtl/ltr.png') will be changed to url('/right/left/ltr/rtl.png')\n// Definite trade-offs here, but I think it's a good call.\nconst bgImgDirectionRegex = new RegExp(\n  '(^|\\\\W|_)((ltr)|(rtl)|(left)|(right))(\\\\W|_|$)',\n  'g',\n)\nconst bgPosDirectionRegex = new RegExp('(left)|(right)')\n\n/**\n * converts properties and values in the CSS in JS object to their corresponding RTL values\n * @param {Object} object the CSS in JS object\n * @return {Object} the RTL converted object\n */\nexport function convert(object) {\n  return Object.keys(object).reduce(\n    (newObj, originalKey) => {\n      let originalValue = object[originalKey]\n      if (isString(originalValue)) {\n        // you're welcome to later code 😺\n        originalValue = originalValue.trim()\n      }\n\n      // Some properties should never be transformed\n      if (includes(propsToIgnore, originalKey)) {\n        newObj[originalKey] = originalValue\n        return newObj\n      }\n\n      const {key, value} = convertProperty(originalKey, originalValue)\n      newObj[key] = value\n      return newObj\n    },\n    Array.isArray(object) ? [] : {},\n  )\n}\n\n/**\n * Converts a property and its value to the corresponding RTL key and value\n * @param {String} originalKey the original property key\n * @param {Number|String|Object} originalValue the original css property value\n * @return {Object} the new {key, value} pair\n */\nexport function convertProperty(originalKey, originalValue) {\n  const isNoFlip = /\\/\\*\\s?@noflip\\s?\\*\\//.test(originalValue)\n  const key = isNoFlip ? originalKey : getPropertyDoppelganger(originalKey)\n  const value = isNoFlip\n    ? originalValue\n    : getValueDoppelganger(key, originalValue)\n  return {key, value}\n}\n\n/**\n * This gets the RTL version of the given property if it has a corresponding RTL property\n * @param {String} property the name of the property\n * @return {String} the name of the RTL property\n */\nexport function getPropertyDoppelganger(property) {\n  return propertiesToConvert[property] || property\n}\n\n/**\n * This converts the given value to the RTL version of that value based on the key\n * @param {String} key this is the key (note: this should be the RTL version of the originalKey)\n * @param {String|Number|Object} originalValue the original css property value. If it's an object, then we'll convert that as well\n * @return {String|Number|Object} the converted value\n */\nexport function getValueDoppelganger(key, originalValue) {\n  /* eslint complexity:[2, 10] */ // let's try to keep the complexity down... If we have to do this much more, let's break this up\n  if (isNullOrUndefined(originalValue) || isBoolean(originalValue)) {\n    return originalValue\n  }\n\n  if (isObject(originalValue)) {\n    return convert(originalValue) // recurssion 🌀\n  }\n  const isNum = isNumber(originalValue)\n  const isFunc = isFunction(originalValue)\n\n  const importantlessValue =\n    isNum || isFunc\n      ? originalValue\n      : originalValue.replace(/ !important.*?$/, '')\n  const isImportant =\n    !isNum && importantlessValue.length !== originalValue.length\n  const valueConverter = propertyValueConverters[key]\n  let newValue\n  if (valueConverter) {\n    newValue = valueConverter({\n      value: importantlessValue,\n      valuesToConvert,\n      propertiesToConvert,\n      isRtl: true,\n      bgImgDirectionRegex,\n      bgPosDirectionRegex,\n    })\n  } else {\n    newValue = valuesToConvert[importantlessValue] || importantlessValue\n  }\n  if (isImportant) {\n    return `${newValue} !important`\n  }\n  return newValue\n}\n"],"names":["arrayToObject","array","reduce","obj","prop1","prop2","isBoolean","val","isFunction","isNumber","isNullOrUndefined","isObject","isString","includes","inclusive","inclusee","indexOf","flipSign","value","parseFloat","slice","flipTransformSign","match","prefix","offset","suffix","calculateNewBackgroundPosition","idx","len","length","toFixed","getValuesAsList","replace","split","map","i","trim","filter","Boolean","item","list","state","openParansCount","closedParansCount","parensDepth","push","handleQuartetValues","splitValues","top","right","bottom","left","join","propertyValueConverters","padding","textShadow","negative","number","doubleNegative","borderColor","borderRadius","radius1","radius2","convertedRadius1","convertedRadius2","reverse","topLeft","topRight","bottomRight","bottomLeft","background","valuesToConvert","isRtl","bgImgDirectionRegex","bgPosDirectionRegex","backgroundPositionValue","backgroundPosition","backgroundImage","g1","group2","group","backgroundPositionX","transition","propertiesToConvert","values","transitionProperty","prop","transform","nonAsciiPattern","escapePattern","signedQuantPattern","translateXRegExp","RegExp","translateRegExp","translate3dRegExp","rotateRegExp","objectPosition","margin","borderWidth","boxShadow","webkitBoxShadow","mozBoxShadow","WebkitBoxShadow","MozBoxShadow","borderStyle","webkitTransform","mozTransform","WebkitTransform","MozTransform","transformOrigin","webkitTransformOrigin","mozTransformOrigin","WebkitTransformOrigin","MozTransformOrigin","webkitTransition","mozTransition","WebkitTransition","MozTransition","webkitTransitionProperty","mozTransitionProperty","WebkitTransitionProperty","MozTransitionProperty","propsToIgnore","convert","object","Object","keys","newObj","originalKey","originalValue","convertProperty","key","Array","isArray","isNoFlip","test","getPropertyDoppelganger","getValueDoppelganger","property","isNum","isFunc","importantlessValue","isImportant","valueConverter","newValue"],"mappings":"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"}